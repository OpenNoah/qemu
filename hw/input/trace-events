# See docs/devel/tracing.rst for syntax documentation.

# adb-kbd.c
adb_device_kbd_no_key(void) "Ignoring NO_KEY"
adb_device_kbd_writereg(int reg, uint8_t val) "reg %d val 0x%2.2x"
adb_device_kbd_readreg(int reg, uint8_t val0, uint8_t val1) "reg %d obuf[0] 0x%2.2x obuf[1] 0x%2.2x"
adb_device_kbd_request_change_addr(int devaddr) "change addr to 0x%x"
adb_device_kbd_request_change_addr_and_handler(int devaddr, int handler) "change addr and handler to 0x%x, 0x%x"

# adb-mouse.c
adb_device_mouse_flush(void) "flush"
adb_device_mouse_writereg(int reg, uint8_t val) "reg %d val 0x%2.2x"
adb_device_mouse_readreg(int reg, uint8_t val0, uint8_t val1) "reg %d obuf[0] 0x%2.2x obuf[1] 0x%2.2x"
adb_device_mouse_request_change_addr(int devaddr) "change addr to 0x%x"
adb_device_mouse_request_change_addr_and_handler(int devaddr, int handler) "change addr and handler to 0x%x, 0x%x"

# adb.c
adb_bus_request(uint8_t addr, const char *cmd, int size) "device 0x%x %s cmdsize=%d"
adb_bus_request_done(uint8_t addr, const char *cmd, int size) "device 0x%x %s replysize=%d"
adb_bus_autopoll_block(bool blocked) "blocked: %d"
adb_bus_autopoll_cb(uint16_t mask) "executing autopoll_cb with autopoll mask 0x%x"
adb_bus_autopoll_cb_done(uint16_t mask) "done executing autopoll_cb with autopoll mask 0x%x"

# pckbd.c
pckbd_kbd_read_data(uint32_t val) "0x%02x"
pckbd_kbd_read_status(int status) "0x%02x"
pckbd_outport_write(uint32_t val) "0x%02x"
pckbd_kbd_write_command(uint64_t val) "0x%02"PRIx64
pckbd_kbd_write_data(uint64_t val) "0x%02"PRIx64

# ps2.c
ps2_put_keycode(void *opaque, int keycode) "%p keycode 0x%02x"
ps2_keyboard_event(void *opaque, int qcode, int down, unsigned int modifier, unsigned int modifiers, int set, int xlate) "%p qcode %d down %d modifier 0x%x modifiers 0x%x set %d xlate %d"
ps2_read_data(void *opaque) "%p"
ps2_set_ledstate(void *s, int ledstate) "%p ledstate %d"
ps2_reset_keyboard(void *s) "%p"
ps2_write_keyboard(void *opaque, int val) "%p val %d"
ps2_keyboard_set_translation(void *opaque, int mode) "%p mode %d"
ps2_mouse_send_packet(void *s, int dx1, int dy1, int dz1, int b) "%p x %d y %d z %d bs 0x%x"
ps2_mouse_fake_event(void *opaque) "%p"
ps2_write_mouse(void *opaque, int val) "%p val %d"
ps2_kbd_reset(void *opaque) "%p"
ps2_mouse_reset(void *opaque) "%p"

# hid.c
hid_kbd_queue_full(void) "queue full"
hid_kbd_queue_empty(void) "queue empty"

# tsc2005.c
tsc2005_sense(const char *state) "touchscreen sense %s"

# virtio-input.c
virtio_input_queue_full(void) "queue full"

# lasips2.c
lasips2_reg_read(unsigned int size, int id, uint64_t addr, const char *name, uint64_t val) "%u %d addr 0x%"PRIx64 "%s -> 0x%"PRIx64
lasips2_reg_write(unsigned int size, int id, uint64_t addr, const char *name, uint64_t val) "%u %d addr 0x%"PRIx64 "%s <- 0x%"PRIx64
lasips2_intr(unsigned int val) "%d"

# stmpe2403.c
stmpe2403_reg_write(uint8_t reg, uint8_t value) "*0x%02x = 0x%02x"
stmpe2403_reg_read(uint8_t reg, uint8_t value) "*0x%02x = 0x%02x"
stmpe2403_i2c_event(const char *ev, uint8_t value) "%s: 0x%02x"
stmpe2403_gpio(uint32_t dir, uint32_t pin, uint32_t edge, uint32_t re, uint32_t fe, uint32_t pup, uint32_t pdn, uint64_t afr) "dir=0x%06x pin=0x%06x edge=0x%06x re=0x%06x fe=0x%06x pup=0x%06x pdn=0x%06x afr=0x%012"PRIx64
stmpe2403_gpio_in(int n, int level) "%d level=%d"
stmpe2403_irq(int level, uint32_t pin) "%d pin=0x%06x"

# d88_matrix_keypad.c
d88_matrix_keypad_row_in(int n, int level) "n=%d level=%d"
d88_matrix_keypad_col_in(int n, int level) "n=%d level=%d"
d88_matrix_keypad_row_out(int n, int level) "n=%d level=%d"
d88_matrix_keypad_col_out(int n, int level) "n=%d level=%d"
d88_matrix_keypad_event(int down, int qcode, int row, int col) "down=%d qcode=%d row=%d col=%d"
d88_matrix_keypad_state(uint32_t rw, uint32_t rwv, uint32_t rsv, uint32_t cw, uint32_t cwv, uint32_t csv) "row(weak=0x%08x wv=0x%08x sv=0x%08x) col(weak=0x%08x wv=0x%08x sv=0x%08x)"
